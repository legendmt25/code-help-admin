/*
 * Coding helper spec
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package codehelp_core_api




type ProblemByLikes struct {

	Category Category `json:"category,omitempty"`

	Title string `json:"title"`

	Difficulty Difficulty `json:"difficulty"`

	Markdown string `json:"markdown,omitempty"`

	Id int32 `json:"id,omitempty"`

	StarterCode string `json:"starterCode"`

	Likes int32 `json:"likes"`
}

// AssertProblemByLikesRequired checks if the required fields are not zero-ed
func AssertProblemByLikesRequired(obj ProblemByLikes) error {
	elements := map[string]interface{}{
		"title": obj.Title,
		"difficulty": obj.Difficulty,
		"starterCode": obj.StarterCode,
		"likes": obj.Likes,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertCategoryRequired(obj.Category); err != nil {
		return err
	}
	return nil
}

// AssertProblemByLikesConstraints checks if the values respects the defined constraints
func AssertProblemByLikesConstraints(obj ProblemByLikes) error {
	return nil
}
