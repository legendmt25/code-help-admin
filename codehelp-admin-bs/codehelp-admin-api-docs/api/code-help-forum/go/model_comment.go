/*
 * Forum application
 *
 * Forum application api
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package code_help_forum_api


import (
	"time"
)



type Comment struct {

	Uid string `json:"uid"`

	Content string `json:"content"`

	Created time.Time `json:"created"`

	Replies CommentReplies `json:"replies,omitempty"`

	Modified time.Time `json:"modified"`

	User User `json:"user"`
}

// AssertCommentRequired checks if the required fields are not zero-ed
func AssertCommentRequired(obj Comment) error {
	elements := map[string]interface{}{
		"uid": obj.Uid,
		"content": obj.Content,
		"created": obj.Created,
		"modified": obj.Modified,
		"user": obj.User,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertCommentRepliesRequired(obj.Replies); err != nil {
		return err
	}
	if err := AssertUserRequired(obj.User); err != nil {
		return err
	}
	return nil
}

// AssertCommentConstraints checks if the values respects the defined constraints
func AssertCommentConstraints(obj Comment) error {
	return nil
}
