/*
 * Forum application
 *
 * Forum application api
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package code_help_forum_api


import (
	"time"
)



type Post struct {

	Uid string `json:"uid"`

	Title string `json:"title"`

	Created time.Time `json:"created"`

	User User `json:"user"`

	Content string `json:"content"`

	Comments []Comment `json:"comments"`

	Modified time.Time `json:"modified"`
}

// AssertPostRequired checks if the required fields are not zero-ed
func AssertPostRequired(obj Post) error {
	elements := map[string]interface{}{
		"uid": obj.Uid,
		"title": obj.Title,
		"created": obj.Created,
		"user": obj.User,
		"content": obj.Content,
		"comments": obj.Comments,
		"modified": obj.Modified,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertUserRequired(obj.User); err != nil {
		return err
	}
	for _, el := range obj.Comments {
		if err := AssertCommentRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertPostConstraints checks if the values respects the defined constraints
func AssertPostConstraints(obj Post) error {
	return nil
}
